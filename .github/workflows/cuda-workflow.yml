name: Build and Run CUDA tests

on:
  push:
    branches: [ sycl-develop ]

env:
  CUDA_VERSION: "12.3"
  HOME: /tmp/home

jobs:
  test:
    name: CUDA ${{ matrix.runner }} ${{ matrix.test_kind }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: h100
            test_kind: examples
            cuda_target: 90a
            platform: nvidia_gpu
            tests: sgemm_1 tiled_copy sgemm_sm80 sgemm_2 sgemm_sm70 14_ampere_tf32_tensorop_gemm_cute
          - runner: a100
            test_kind: examples
            cuda_target: "80"
            platform: nvidia_gpu
            tests: sgemm_1 tiled_copy sgemm_sm80 sgemm_2 sgemm_sm70 14_ampere_tf32_tensorop_gemm_cute
          - runner: a100
            test_kind: benchmarks
            cuda_target: "80"
            cmake_options: -DCUTLASS_ENABLE_BENCHMARKS=ON
            platform: nvidia_gpu
            tests: benchmarks
            input: ampere

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}

      - name: Allocate nvidia ${{ matrix.runner }} resource
        if: matrix.platform == 'nvidia_gpu'
        uses: ./.github/actions/allocate_cb_resource
        with:
          ACTION: lock
          CB_USER: ${{ secrets.CB_USER }}
          CB_PASSWORD: ${{ secrets.CB_PASSWORD }}

      - name: Configure CUTLASS project with CUDA
        run: |
          mkdir -p build && cd build

          cmake -G Ninja \
                -DCMAKE_CUDA_COMPILER=/usr/local/cuda-${{ env.CUDA_VERSION }}/bin/nvcc \
                -DCUTLASS_NVCC_ARCHS=${{ matrix.cuda_target }} \
                ${{ matrix.cmake_options }} \
                ..

      - name: Build tests
        uses: ./.github/actions/build_tests
        with:
          TARGETS: ${{ matrix.tests }}
        continue-on-error: true

      - name: Run tests
        if: matrix.test_kind != 'benchmarks'
        uses: ./.github/actions/run_tests
        with:
          TARGETS: ${{ matrix.tests }}
        continue-on-error: true

      - name: Run benchmarks
        if: matrix.test_kind == 'benchmarks'
        uses: ./.github/actions/run_benchmarks
        with:
          PLATFORM: ${{ matrix.runner }}
          INPUT: ${{ matrix.input }}

      - name: Upload results
        if: matrix.test_kind == 'benchmarks'
        uses: ./.github/actions/upload-results
        with:
          LOGS_DIR: ${{ github.workspace }}/outputs/testing
          LOG_FILE_NAME: ${{ matrix.runner }}_benchmarks
          ARTIFACT_NAME: cutlass_cuda_${{ matrix.runner }}_benchmarks
          BENCHMARK_TYPE: cutlass
          RUN_INFO: >
            branch=${{ github.event.pull_request.head.ref || github.ref_name }}
            sha=${{ github.event.pull_request.head.sha || github.sha }}
            platform=${{ matrix.runner }}
            run_type=cuda
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}

      - name: Release nvidia ${{ matrix.runner }} resource
        if: always() && matrix.platform == 'nvidia_gpu'
        uses: ./.github/actions/allocate_cb_resource
        with:
          ACTION: unlock
          CB_USER: ${{ secrets.CB_USER }}
          CB_PASSWORD: ${{ secrets.CB_PASSWORD }}
